Savitribai Phule Pune University
S.Y.M.Sc(Comp. Sci.) Practical Examination 
Practical Paper(CSUP235) on Software Architecture and Design Patterns,Machine Learning and 
Web Frameworks
Duration : 3 Hours Maximum Marks: 70 
----------------------------------------------------------------------------------------------------------------------------------------------
11
Q.1 Write a java program to implement Adapter pattern to design Heart Model to Beat 
Model [20 M]
Q2. Write a python program to find all null values in a given dataset and remove them.
[20 M]
Q.3 Create a node.js file that Select all records from the "customers" table, and delete the
 specified record. [20 M]
Q.4 Vivaa

-------------------------------------------------------------------------------------------------------------------------------------------------------------

Q1----------

Write a java program to implement Adapter pattern to design Heart Model to Beat 
Model 
interface BeatModelInterface { 
void initialize(); 
void on(); 
void off(); 
void setBPM(int bpm); 
int getBPM(); 
void registerObserver(BeatObserver o); 
void removeObserver(BeatObserver o); 
void registerObserver(BPMObserver o); 
void removeObserver(BPMObserver o); 
} 
 class BeatModel implements BeatModelInterface, MetaEventListener { 
Sequencer sequencer; 
ArrayList beatObservers = new ArrayList(); 
ArrayList bpmObservers = new ArrayList(); 
int bpm = 90; 
// other instance variables here 
public void initialize() { 
setUpMidi(); 
buildTrackAndStart(); 
} 
public void on() { 
sequencer.start(); 
setBPM(90); 
} 
public void off() { 
setBPM(0); 
sequencer.stop(); 
} 
public void setBPM(int bpm) { 
this.bpm = bpm; 
sequencer.setTempoInBPM(getBPM()); 
notifyBPMObservers(); 
} 
public int getBPM() { 
return bpm; 
} 
void beatEvent() { 
notifyBeatObservers(); 
} 
// Code to register and notify observers 
// Lots of MIDI code to handle the beat 
} 
 class DJView implements ActionListener, BeatObserver, BPMObserver { 
BeatModelInterface model; 
ControllerInterface controller; 
JFrame viewFrame; 
JPanel viewPanel; 
BeatBar beatBar; 
JLabel bpmOutputLabel; 
public DJView(ControllerInterface controller, BeatModelInterface model) { 
this.controller = controller; 
this.model = model; 
model.registerObserver((BeatObserver)this); 
model.registerObserver((BPMObserver)this); 
} 
public void createView() { 
// Create all Swing components here 
} 
public void updateBPM() { 
int bpm = model.getBPM(); 
if (bpm == 0) { 
bpmOutputLabel.setText("offline"); 
} else { 
bpmOutputLabel.setText("Current BPM: " + model.getBPM()); 
} 
} 
public void updateBeat() { 
beatBar.setValue(100); 
} 
} 
 interface ControllerInterface { 
void start(); 
void stop(); 
void increaseBPM(); 
void decreaseBPM(); 
void setBPM(int bpm); 
} 
 class BeatController implements ControllerInterface { 
BeatModelInterface model; 
DJView view; 
public BeatController(BeatModelInterface model) { 
this.model = model; 
view = new DJView(this, model); 
view.createView(); 
view.createControls(); 
view.disableStopMenuItem(); 
view.enableStartMenuItem(); 
model.initialize(); 
} 
public void start() { 
model.on(); 
view.disableStartMenuItem(); 
view.enableStopMenuItem(); 
} 
public void stop() { 
model.off(); 
view.disableStopMenuItem(); 
view.enableStartMenuItem(); 
} 
public void increaseBPM() { 
int bpm = model.getBPM(); 
model.setBPM(bpm + 1); 
} 
public void decreaseBPM() { 
int bpm = model.getBPM(); 
model.setBPM(bpm - 1); 
} 
public void setBPM(int bpm) { 
model.setBPM(bpm); 
} 
} 
public class Main { 
public static void main (String[] args) { 
BeatModelInterface model = new BeatModel(); 
ControllerInterface controller = new BeatController(model); 
} 
} 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Q2----------

Write a python program to find all null values in a given dataset and remove them.
Firstly Create CSV File
ST_NUM		ST_NAME		NUM_BEDROOMS		OWN_OCCUPIED
104		PUTNAM			3			Y
197		LEXINGTON		3			N
		LEXINGTON		N/A			N
201		BERKELEY			1			12	
203		BERKELEY			3			Y
207		BERKELEY			NA			Y
NA		WASHINGTON		2			
213		TREMONT			--			Y
215		TREMONT			NA			Y

import pandas as pd
import numpy as np
df=pd.read_csv("nullvalues.csv")
df
print(df.head())
print(df['ST_NUM'])

print(df['ST_NUM'])
print(df['ST_NUM'].isnull())

print(df['NUM_BEDROOMS'])
print(df['NUM_BEDROOMS'].isnull())

missing_values = ["n/a", "na", "--"]
df = pd.read_csv("nullvalues.csv", na_values = missing_values)

print(df['OWN_OCCUPIED'])
print(df['OWN_OCCUPIED'].isnull())

print(df.isnull().sum())

(df['ST_NUM'].fillna(125,inplace=True))

df


---------------------------------------------------------------------------------------------------------------------------------------------------------

Q3------

 Create a node.js file that Select all records from the "customers" table, and delete the specified 
record. 
var mysql = require('mysql'); 
var con = mysql.createConnection( 
 { 
 host:"localhost", 
 user:"root", 
 password:"password", 
 database:"db"
 }); 
 con.connect(function(err) 
 { 
 if (err) throw err; 
 console.log("connected"); 
 var sql = 'select * from customer'; 
 con.query(sql, function (err, result,fields){ 
 if (err) throw err; 
 console.log(result); 
 }); 
 var sql1 = "delete from customer where id ='1'"; 
 con.query(sql1, function (err, result,fields){ 
 if (err) throw err; 
 console.log(result); 
 }); 
 con.query(sql, function (err, result,fields){ 
 if (err) throw err; 
 console.log(result); 
 }); 
 }); 



